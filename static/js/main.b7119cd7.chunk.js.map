{"version":3,"sources":["components/components.js","pages/HomePage/index.js","pages/about/index.js","WebAPI.js","context.js","pages/login/index.js","pages/register/index.js","components/Headers/index.js","pages/post/index.js","pages/single-post/index.js","pages/all-post/index.js","App.js","reportWebVitals.js","index.js"],"names":["FormContainer","styled","div","Form","FormTitle","h1","Button","a","Input","input","handleInputChange","isPassword","label","placeholder","name","value","onChange","type","undefined","PostContainer","PostTitle","h2","ErrorMessage","NewPostInputContainer","PostContent","p","Post","post","time","Date","createdAt","toLocaleString","style","paddingBottom","borderBottom","width","title","body","to","id","cursor","color","NewPost","postContent","handlePostChange","handleAddNewPost","errorMessage","justifyContent","height","marginTop","e","as","content","margin","display","padding","borderRadius","onClick","ControlPanel","FlexContainer","ActivePage","PageLinks","Link","PageController","currentPage","totalPostCount","handleClickPage","pageCount","Math","floor","Home","About","Base_URL","SignUp","nickname","username","password","fetch","method","headers","JSON","stringify","res","json","ok","message","toString","Object","keys","length","status","login","getMe","userToken","localStorage","getItem","authorization","getSinglePost","getThatPage","page","AuthContext","createContext","Login","useState","setErrorMessage","isLoading","history","useHistory","setIsLogin","useContext","inputs","setInputs","obj","forEach","target","setItem","token","push","map","index","Register","Navbar","Container","NavLinks","Brand","ALink","props","active","NavLink","exact","match","useRouteMatch","path","Header","isLogin","useEffect","fetchData","setPostContent","tag","addPost","then","data","SinglePost","slug","useParams","postValue","setPostValue","lineHeight","AllPost","setIsLoading","posts","setPosts","setTotalPostCount","Number","get","window","scroll","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7119cd7.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const FormContainer = styled.div`\n  max-width: 800px;\n  min-height: 600px;\n  margin: 20px auto;\n  border: 1px solid #ccc;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  div + div {\n    margin-top: 30px;\n  }\n`;\nexport const FormTitle = styled.h1`\n  text-align: left;\n  margin-top: 0;\n`;\nexport const Button = styled.a`\n  display: block;\n  text-align: center;\n  background: #ddd;\n  padding: 5px;\n  border: none;\n  margin-top: 30px;\n  transition: all 0.3s;\n  font-size: 16px;\n  :hover {\n    cursor: pointer;\n    background: white;\n  }\n`;\nexport const Input = ({ input, handleInputChange }) => {\n  let isPassword = false;\n  if (input.label === \"Password\") isPassword = true;\n  return (\n    <div>\n      <div>{input.label}:</div>\n      <input\n        placeholder={`您的 ${input.label}`}\n        name={input.label}\n        value={input.value}\n        onChange={handleInputChange}\n        type={isPassword === true ? \"password\" : undefined}\n      />\n    </div>\n  );\n};\nexport const PostContainer = styled.div`\n  max-width: 60%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  div + div {\n    margin-top: 30px;\n  }\n`;\nexport const PostTitle = styled.h2`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nexport const ErrorMessage = styled.div`\n  color: red;\n  margin-top: 20px;\n`;\nconst NewPostInputContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\nconst PostContent = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  line-height: 30px;\n`;\nexport const Post = ({ post }) => {\n  const time = new Date(post.createdAt).toLocaleString();\n  return (\n    <div\n      style={{\n        paddingBottom: \"20px\",\n        borderBottom: \"1px solid #ccc\",\n        width: \"60%\",\n      }}\n    >\n      <PostTitle>{post.title}</PostTitle>\n      <div>{time}</div>\n      <PostContent>{post.body}</PostContent>\n      <Link\n        to={`/posts/${post.id}`}\n        style={{ cursor: \"pointer\", color: \"black\" }}\n      >\n        繼續閱讀\n      </Link>\n    </div>\n  );\n};\nexport const NewPost = ({\n  postContent,\n  handlePostChange,\n  handleAddNewPost,\n  errorMessage,\n}) => {\n  return (\n    <FormContainer style={{ justifyContent: \"flex-start\", height: \"100%\" }}>\n      <FormTitle style={{ marginTop: \"30px\" }}>新增文章</FormTitle>\n      <Form\n        style={{\n          width: \"90%\",\n          height: \"100%\",\n          justifyContent: \"center\",\n        }}\n      >\n        <NewPostInputContainer>\n          <h3>文章標題：</h3>\n          <input\n            style={{ height: \"29px\" }}\n            placeholder=\"標題\"\n            value={postContent.title}\n            onChange={(e) => {\n              handlePostChange(e, \"title\");\n            }}\n          />\n        </NewPostInputContainer>\n        <FormTitle as=\"h3\">文章內容</FormTitle>\n        <textarea\n          value={postContent.content}\n          style={{\n            margin: \"0 auto\",\n            height: \"230px\",\n            width: \"80%\",\n          }}\n          onChange={(e) => {\n            handlePostChange(e, \"content\");\n          }}\n        />\n        <div\n          style={{ display: \"visibility\", margin: \"10px auto\", color: \"red\" }}\n        >\n          {errorMessage}\n        </div>\n        <Button\n          style={{\n            margin: \"30px auto\",\n            padding: \"10px\",\n            width: \"70px\",\n            borderRadius: \"3px\",\n          }}\n          onClick={handleAddNewPost}\n        >\n          新增\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\nconst ControlPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  margin-top: 80px;\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 35px;\n  div + div {\n    margin-left: 20px;\n  }\n  a + a {\n    margin-left: 20px;\n  }\n`;\nconst ActivePage = styled.div`\n  border-radius: 50%;\n  height: 30px;\n  width: 30px;\n  margin: 0 20px;\n  text-align: center;\n  line-height: 30px;\n  background-color: #ddd;\n  color: black;\n`;\nconst PageLinks = styled(Link)`\n  color: black;\n  text-decoration: none;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nexport const PageController = ({\n  currentPage,\n  totalPostCount,\n  handleClickPage,\n}) => {\n  let pageCount = Math.floor(totalPostCount / 5);\n  if (totalPostCount % 5 !== 0) pageCount += 1;\n  return (\n    <ControlPanel>\n      <FlexContainer>\n        {currentPage === 1 ? (\n          \"\"\n        ) : (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage - 1}`}\n          >\n            上一頁\n          </PageLinks>\n        )}\n        {currentPage - 2 >= 1 ? (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage - 2}`}\n          >\n            {currentPage - 2}\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n        {currentPage - 1 >= 1 ? (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage - 1}`}\n          >\n            {currentPage - 1}\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n        <ActivePage>{currentPage}</ActivePage>\n        {pageCount - currentPage >= 1 ? (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage + 1}`}\n          >\n            {currentPage + 1}\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n        {pageCount - currentPage >= 2 ? (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage + 2}`}\n          >\n            {currentPage + 2}\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n        {pageCount - currentPage >= 1 ? (\n          <PageLinks\n            onClick={handleClickPage}\n            to={`/all-post/${currentPage + 1}`}\n          >\n            下一頁\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n      </FlexContainer>\n      <FlexContainer>\n        {currentPage !== 1 ? (\n          <PageLinks onClick={handleClickPage} to={`/all-post/1`}>\n            第一頁\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n        {currentPage !== pageCount ? (\n          <PageLinks onClick={handleClickPage} to={`/all-post/${pageCount}`}>\n            最後一頁\n          </PageLinks>\n        ) : (\n          \"\"\n        )}\n      </FlexContainer>\n    </ControlPanel>\n  );\n};\n","import { PostContainer } from \"../../components/components\";\n\nexport default function Home() {\n  return (\n    <PostContainer>\n      <h1>哈囉～你來到首頁</h1>\n      <p>這裡是首頁，但我不知道放什麼。要看文章請去所有文章～</p>\n    </PostContainer>\n  );\n}\n","import { PostContainer } from \"../../components/components\";\n\nexport default function About() {\n  return (\n    <PostContainer>\n      <h1>關於我</h1>\n      <p>如有雷同，純屬抄襲。</p>\n    </PostContainer>\n  );\n}\n","const Base_URL = \"https://student-json-api.lidemy.me\";\n\nexport async function getPosts() {\n  let res = await fetch(\n    `${Base_URL}/posts?_sort=createdAt&_order=desc&_limit=5`\n  );\n  console.log(res.json());\n}\nexport async function SignUp(nickname, username, password) {\n  let res;\n  let json;\n  try {\n    res = await fetch(`${Base_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname,\n        username,\n        password,\n      }),\n    });\n    json = await res.json();\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (Object.keys(json).length !== 0) return json;\n  if (res.ok) return json;\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\nexport async function login(username, password) {\n  let res;\n  let json;\n  try {\n    res = await fetch(`${Base_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n    json = await res.json();\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (Object.keys(json).length !== 0) return json;\n  if (res.ok) return res.json();\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\nexport async function getMe() {\n  const userToken = localStorage.getItem(\"user_token\");\n  let res;\n  let json;\n  try {\n    res = await fetch(`${Base_URL}/me`, {\n      headers: {\n        authorization: `Bearer ${userToken}`,\n      },\n    });\n    json = res.json();\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (Object.keys(json).length !== 0) return json;\n  if (res.ok) return json;\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\nexport async function addPost(title, body) {\n  const userToken = localStorage.getItem(\"user_token\");\n  let res;\n  let json;\n  try {\n    res = await fetch(`${Base_URL}/posts`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${userToken}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        body,\n      }),\n    });\n    json = res.json();\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (Object.keys(json).length !== 0) return json;\n  if (res.ok) return json;\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\n\nexport async function getSinglePost(id) {\n  let res;\n  let json;\n  try {\n    res = await fetch(`${Base_URL}/posts?id=${id}`);\n    json = await res.json();\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (Object.keys(json).length !== 0) return json;\n  if (res.ok) return json;\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\nexport async function getThatPage(page) {\n  let res;\n  try {\n    res = await fetch(\n      `${Base_URL}/posts?_page=${page}&_sort=createdAt&_order=desc&_limit=5`\n    );\n  } catch (err) {\n    return {\n      ok: 0,\n      message: err.toString(),\n    };\n  }\n  if (res.ok) return res;\n  else {\n    return {\n      ok: 0,\n      message: res.status,\n    };\n  }\n}\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import {\n  FormContainer,\n  Form,\n  FormTitle,\n  Button,\n  Input,\n  ErrorMessage,\n} from \"../../components/components\";\nimport { useState, useContext } from \"react\";\nimport { login } from \"../../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context\";\n\nexport default function Login() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let isLoading = false;\n  let history = useHistory();\n  const { setIsLogin } = useContext(AuthContext);\n  const [inputs, setInputs] = useState([\n    {\n      label: \"Username\",\n      value: \"\",\n    },\n    {\n      label: \"Password\",\n      value: \"\",\n    },\n  ]);\n  const handleInputChange = (e) => {\n    const obj = [...inputs];\n    obj.forEach((input) => {\n      if (input.label === e.target.name) input.value = e.target.value;\n    });\n    setInputs(obj);\n  };\n  async function handleLogin() {\n    if (isLoading) return;\n    isLoading = true;\n    const username = inputs[0].value;\n    const password = inputs[1].value;\n    let res = await login(username, password);\n    if (res.ok) {\n      localStorage.setItem(\"user_token\", res.token);\n      setIsLogin(true);\n      history.push(\"/\");\n    } else {\n      setErrorMessage(res.message);\n    }\n    isLoading = false;\n  }\n  return (\n    <FormContainer>\n      <Form>\n        <FormTitle>登入</FormTitle>\n        {inputs.map((input, index) => (\n          <Input\n            key={index}\n            input={input}\n            handleInputChange={handleInputChange}\n          />\n        ))}\n        <Button onClick={handleLogin}>提交</Button>\n      </Form>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </FormContainer>\n  );\n}\n","import { useState } from \"react\";\nimport { SignUp } from \"../../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  FormContainer,\n  Form,\n  FormTitle,\n  Button,\n  Input,\n  ErrorMessage,\n} from \"../../components/components\";\n\nexport default function Register() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let isLoading = false;\n  let history = useHistory();\n  const [inputs, setInputs] = useState([\n    {\n      label: \"Nickname\",\n      value: \"\",\n    },\n    {\n      label: \"Username\",\n      value: \"\",\n    },\n    {\n      label: \"Password\",\n      value: \"\",\n    },\n  ]);\n  const handleInputChange = (e) => {\n    const obj = [...inputs];\n    obj.forEach((input) => {\n      if (input.label === e.target.name) input.value = e.target.value;\n    });\n    setInputs(obj);\n  };\n  async function handleRegister() {\n    if (isLoading) return;\n    isLoading = true;\n    const nickname = inputs[0].value;\n    const username = inputs[1].value;\n    const password = inputs[2].value;\n    let res = await SignUp(nickname, username, password);\n    if (res.ok) {\n      setErrorMessage(\"\");\n      history.push(\"/login\");\n    } else {\n      setErrorMessage(res.message);\n    }\n    isLoading = false;\n  }\n  return (\n    <FormContainer>\n      <Form>\n        <FormTitle>註冊</FormTitle>\n        {inputs.map((input, index) => (\n          <Input\n            key={index}\n            input={input}\n            handleInputChange={handleInputChange}\n          />\n        ))}\n        <Button onClick={handleRegister}>提交</Button>\n      </Form>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </FormContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { useEffect, useContext } from \"react\";\nimport \"./index.css\";\nimport { getMe } from \"../../WebAPI\";\nimport { AuthContext } from \"../../context\";\nconst Navbar = styled.div`\n  width: 100%;\n  height: 55px;\n  border-bottom: 1px solid #dbdbdb;\n`;\nconst Container = styled.div`\n  max-width: 1200px;\n  height: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst NavLinks = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  a + a {\n    margin-left: 30px;\n  }\n  div + a {\n    margin-left: 30px;\n  }\n`;\nconst Brand = styled.div`\n  font-weight: 600;\n  font-size: 24px;\n`;\nconst ALink = styled(Link)`\n  display: block;\n  height: 100%;\n  line-height: 54px;\n  text-decoration: none;\n  padding: 0 10px;\n  color: black;\n  background-color: ${(props) => (props.active ? \"#ccc\" : \"\")};\n  :hover {\n    cursor: pointer;\n  }\n`;\nfunction NavLink({ label, to, exact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact,\n  });\n  return (\n    <ALink to={to} label={label} active={match && \"true\"}>\n      {label}\n    </ALink>\n  );\n}\n\nexport default function Header() {\n  const { isLogin, setIsLogin } = useContext(AuthContext);\n  const history = useHistory();\n  useEffect(() => {\n    const userToken = localStorage.getItem(\"user_token\");\n    async function fetchData() {\n      let res = await getMe();\n      if (res.ok) return setIsLogin(true);\n      setIsLogin(false);\n      localStorage.setItem(\"user_token\", \"\");\n    }\n    if (userToken) fetchData();\n  }, [setIsLogin]);\n  function handleLogout() {\n    setIsLogin(false);\n    localStorage.setItem(\"user_token\", \"\");\n    history.push(\"/\");\n  }\n  return (\n    <Navbar>\n      <Container>\n        <NavLinks>\n          <Brand>\b\bRich</Brand>\n          <NavLink exact={true} to=\"/\" label={\"首頁\"} />\n          <NavLink to=\"/all-post/1\" label={\"所有文章\"} />\n          <NavLink to=\"/about\" label={\"About\"} />\n        </NavLinks>\n        <NavLinks>\n          {!isLogin && <NavLink to=\"/login\" label={\"登入\"} />}\n          {!isLogin && <NavLink to=\"/register\" label={\"註冊\"} />}\n          {isLogin && (\n            <ALink as={\"div\"} onClick={handleLogout}>\n              登出\n            </ALink>\n          )}\n          {isLogin && <NavLink to=\"/add-post\" label={\"發表文章\"} />}\n        </NavLinks>\n      </Container>\n    </Navbar>\n  );\n}\n","import { NewPost } from \"../../components/components\";\nimport { useState } from \"react\";\nimport { addPost } from \"../../WebAPI\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Post() {\n  let isLoading = false;\n  const history = useHistory();\n  const [postContent, setPostContent] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handlePostChange = (e, tag) => {\n    const obj = { ...postContent };\n    obj[tag] = e.target.value;\n    setPostContent(obj);\n  };\n  const handleAddNewPost = () => {\n    if (isLoading) return;\n    isLoading = true;\n    if (postContent.title === \"\" || postContent.content === \"\") {\n      setErrorMessage(\"文章標題或內容不得為空\");\n      return;\n    }\n    addPost(postContent.title, postContent.content).then((data) => {\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n        return;\n      }\n      isLoading = false;\n      history.push(\"/\");\n    });\n  };\n  return (\n    <NewPost\n      handlePostChange={handlePostChange}\n      postContent={postContent}\n      handleAddNewPost={handleAddNewPost}\n      errorMessage={errorMessage}\n    />\n  );\n}\n","import {\n  PostContainer,\n  PostTitle,\n  ErrorMessage,\n} from \"../../components/components\";\nimport { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport { getSinglePost } from \"../../WebAPI\";\nexport default function SinglePost() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let slug = useParams();\n  const [postValue, setPostValue] = useState({\n    title: \"\",\n    time: \"\",\n    content: \"\",\n  });\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getSinglePost(slug.id);\n      if (!res.ok) setErrorMessage(res.message);\n      res = res[0];\n      const time = new Date(res.createdAt).toLocaleString();\n      setPostValue({\n        title: res.title,\n        time,\n        content: res.body,\n      });\n    }\n    fetchData();\n  }, [slug.id]);\n  return (\n    <PostContainer>\n      <PostTitle>{postValue.title}</PostTitle>\n      <div>{postValue.time}</div>\n      <p style={{ lineHeight: \"30px\" }}>{postValue.content}</p>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </PostContainer>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getThatPage } from \"../../WebAPI\";\nimport { useParams } from \"react-router\";\n\nimport {\n  PageController,\n  PostContainer,\n  Post,\n  ErrorMessage,\n} from \"../../components/components\";\n\nexport default function AllPost() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n  const { page } = useParams();\n  const [totalPostCount, setTotalPostCount] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getThatPage(Number(page));\n      if (!res.ok) return setErrorMessage(res.message);\n      setTotalPostCount(res.headers.get(\"x-total-count\"));\n      res = await res.json();\n      setPosts(res);\n      setIsLoading(false);\n    }\n    fetchData();\n    setErrorMessage(\"\");\n  }, [page]);\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [posts]);\n  function handleClickPage() {\n    setIsLoading(true);\n    setPosts([]);\n  }\n  return (\n    <PostContainer>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      {posts.map((post, index) => {\n        return <Post key={index} post={post} />;\n      })}\n      {!isLoading && (\n        <PageController\n          currentPage={Number(page)}\n          totalPostCount={totalPostCount}\n          handleClickPage={handleClickPage}\n        />\n      )}\n    </PostContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/HomePage\";\nimport About from \"./pages/about\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport Header from \"./components/Headers\";\nimport Post from \"./pages/post\";\nimport { AuthContext } from \"./context\";\nimport SinglePost from \"./pages/single-post\";\nimport AllPost from \"./pages/all-post\";\n\nexport default function App() {\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"user_token\")) {\n      setIsLogin(true);\n    }\n  }, []);\n  return (\n    <Router>\n      <AuthContext.Provider value={{ isLogin, setIsLogin }}>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/all-post/:page\">\n              <AllPost />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/add-post\">\n              <Post />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <SinglePost />\n            </Route>\n          </Switch>\n        </div>\n      </AuthContext.Provider>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}